% USER INPUT SECTION

%This script will use the Dynamo tables generated by motl2dynamo to extract particles. Move this script into the same directory that all the TS_X_object_X.tbl files are.

%Enter the requested information in the input area

tomo_x=1024; %Enter your tomogram dimensions in the X dimension
tomo_y=1024; %Enter your tomogram dimensions in the Y dimension
tomo_z=675;

box_size=32; %Enter the desired box size of your subtomograms (for the the tomogram you are extracting particles from)

path_to_tomograms='../ReconstructTomograms/job280/tomograms/'; %Provide the path to the directories in which all the tomograms you wish to extract from are kept (must all be in one directory). IMPORTANT: Your tomograms must be named TS_[tomogram_number].mrc, e.g. TS_100.mrc. Manually rename them or use sed to give the correct naming convention. Or, alter the dtcrop line so Matlab can read the names of your tomograms.

min_tilt=-60; %The minimum tilt angle of your tilt series
max_tilt=60; %The maximum tilt angle of your tilt series

%%%%%%%%%%% END OF USER INPUT AREA

crop_pixel=round(box_size./2); %Will remove subtomograms that are too close to the tomogram edge (less than half the box size)

path_to_initial_particles='./particles_bin4/'; %Will extract particles in this directory

list=dir('../pick_particles/*motl.em'); 
list_names={list.name}; % This extracts the file names of the tables in list
table_cat=[];
count=0;
for i = 1:length(list_names) % This loops through all the files
%for i=1:5
    
name=['../pick_particles/' list_names{1,i}];

initial_motl=dread(name); %Reads the table
ones_inmotl = initial_motl(20,:) == 1;
final_motl = initial_motl(:,ones_inmotl);    

initial_table=dynamo__motl2table(final_motl);

initial_table(:,14) = min_tilt; %Tells Dynamo the tilt angles
initial_table(:,15) = max_tilt; 
initial_table(:,13) = 1; % ftype















%Adjust coordinates from bin8 to bin4
initial_table(:,24) = initial_table(:,4) + initial_table(:,24);    
initial_table(:,25) = initial_table(:,5) + initial_table(:,25);
initial_table(:,26) = initial_table(:,6) + initial_table(:,26);
initial_table(:,4:6) = 0;
initial_table(:,24:26) = initial_table(:,24:26).*2;














% Following lines Get rid overflowing particles that cause dtcrop to be out of bounds
%initial_table(:,24:26)=initial_table(:,24:26)./12.208;
initial_table(:,24:26)=initial_table(:,24:26);

initial_table(initial_table(:,24) < crop_pixel,:) = []; initial_table(initial_table(:,25) < crop_pixel,:) = []; initial_table(initial_table(:,26) < crop_pixel,:) = []; 
initial_table(initial_table(:,24) > (tomo_x-crop_pixel),:) = []; initial_table(initial_table(:,25) > (tomo_y-crop_pixel),:) = []; initial_table(initial_table(:,26) > (tomo_z-crop_pixel),:) = [];

tomon=char(extractBetween(name,27,30)); % THis extracts the tomogram number
tuben=char(extractBetween(name,32,32)); % THis extracts the object number

initial_table(:,20) = str2num(tomon);
initial_table(:,21) = str2num(tuben);

for j=1:size(initial_table,1);
    j2=count+j;
    initial_table(j,1)=j2;
end
count=count+size(initial_table,1);

%Extracts particles in table	
dynamo_table_crop([path_to_tomograms 'rec_TS_' tomon '.mrc'],initial_table,path_to_initial_particles,box_size,'maxMb',6000,'allow_padding',true,'inmemory',true) %If you are not using the requested tomogram naming convention, rename the first argument in this function.

table_cat=cat(1,table_cat,initial_table);


end


dwrite(table_cat,'table_init_bin4.tbl');

average=daverage('particles_bin4/','-t','table_init_bin4.tbl');

dwrite(average.average,'average_init_bin4.em');
